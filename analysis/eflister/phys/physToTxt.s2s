'the following parameters are now set by matlab

'const base$ := "cell 2tmp";

''enter start and end time
'const sTime := 1434;
'const eTime := 1834;

''enter channel id's
'const spkChan%        := 7; 'wavemark chan (all will be considered one class, hide any you don't want exported)
'const stimChan%       := 1; 'photodiode recording
'const framePulseChan% := 2; 
'const physChan%       := 3; 'the high fidelity one
'const trialPulseChan% := 0; 'indicates stimulus/repeats starts

''enter output path
'const expPath$ := "C:\\Documents and Settings\\rlab\\Desktop\\";


'''''''''' dont edit below here '''''''''''''

ChanProcessClear(); 'removes all processes from all channels

'channel type codes for ExportChanFormat
'1	Waveform				
'2	Event (Evt-)		
'3	Event (Evt+)
'4	Level (Evt+-)
'5	Marker 
'6	WaveMark
'7	RealMark
'8	TextMark	
'9	RealWave

ExportChanList(1);                    'clear export list, set zero shift
ExportChanList(sTime, eTime, spkChan%);

ExportTextFormat();                    'reset export params
ExportChanFormat(6,0,1,3);			      'type%, synop%, data%{, as%}   -switch to as=5 to do multiple cells-   (supposed to return error code but doesn't)?

ExportTextFormat(0, 0, 1, "%", "\t");  '(head%, sum%, cols%{, delim${, sep$}})  "\""
Try(MarkMask(spkChan%,0),"setting mask mode to AND all 4 layers");
Try(MarkMask(spkChan%,-1,1,-1),"setting mask to all visible");
Try(MarkMask(spkChan%,0,0,-1),"setting mask to empty 1st layer");
Try(MarkMask(spkChan%,0,1,spkCode%),"setting mask to just spkCode in 1st layer");

doSave("spks");

Try(MarkMask(spkChan%,-1,1,-1),"resetting mask to all visible");

ExportChanFormat(6,0,1,0);
doSave("waveforms");

ExportChanList(1);
ExportChanList(sTime, eTime, stimChan%);
doSave("stim");

ExportChanList(1);
ExportChanList(sTime, eTime, physChan%);
doSave("phys");

ExportChanList(1);
ExportChanList(sTime, eTime, framePulseChan%);
'ExportChanFormat(4,0,1,2);	'doesn't seem to have desired effect of not showing both edges of pulses, so we compensate in matlab
doSave("pulse");

FileClose(-1,-1);
FileQuit();
Halt;

proc doSave(suffix$)
	'consider err% := FilePathSet(expPath$,0,1); 'but then reset to previous
	Try(FileSaveAs(expPath$+base$+" "+suffix$+".txt", 1),"writing "+suffix$+" file"); 'will prompt to overwrite
end;

proc Try(succ%, s$)
	if succ%<0 then
		PrintLog("\n***ERROR:  %s: %s (code %d)\n",s$,Error$(succ%),succ%);
		Halt;
	endif;
end;
